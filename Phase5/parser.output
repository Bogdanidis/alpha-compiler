Terminals unused in grammar

   ONE_LINE_COMMENT
   MULTI_LINE_COMMENT
   OTHER
   DOTS


State 100 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: stmt statements
    3           | %empty

    4 stmt: expr SEMICOLON
    5     | ifstmt
    6     | whilestmt
    7     | forstmt
    8     | returnstmt

    9 $@1: %empty

   10 stmt: BREAK $@1 SEMICOLON

   11 $@2: %empty

   12 stmt: CONTINUE $@2 SEMICOLON
   13     | block
   14     | funcdef
   15     | SEMICOLON

   16 expr: assignexpr

   17 $@3: %empty

   18 expr: expr OR $@3 M expr

   19 $@4: %empty

   20 expr: expr AND $@4 M expr
   21     | NOT expr
   22     | expr PLUS expr
   23     | expr MINUS expr
   24     | expr MULT expr
   25     | expr DIV expr
   26     | expr MODULO expr

   27 $@5: %empty

   28 expr: expr EQUAL $@5 expr

   29 $@6: %empty

   30 expr: expr NOT_EQUAL $@6 expr
   31     | expr GREATER expr
   32     | expr LESS expr
   33     | expr GREATER_EQUAL expr
   34     | expr LESS_EQUAL expr
   35     | term

   36 M: %empty

   37 $@7: %empty

   38 assignexpr: lvalue $@7 ASSIGNMENT expr

   39 term: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS
   40     | MINUS expr
   41     | INCREMENT lvalue
   42     | lvalue INCREMENT
   43     | DECREMENT lvalue
   44     | lvalue DECREMENT
   45     | primary

   46 primary: lvalue
   47        | call
   48        | objectdef
   49        | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS
   50        | const

   51 const: NUMBER
   52      | REAL_NUMBER
   53      | STRING
   54      | TRUE
   55      | FALSE
   56      | NIL

   57 lvalue: ID
   58       | LOCAL ID
   59       | DOUBLE_COLONS ID
   60       | member

   61 member: lvalue DOT ID
   62       | lvalue LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET
   63       | call DOT ID
   64       | call LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET

   65 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS
   66     | lvalue callsuffix
   67     | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   68 callsuffix: normcall
   69           | methodcall

   70 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   71 $@8: %empty

   72 methodcall: DOUBLE_DOT ID $@8 LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   73 elist: expr cexprs
   74      | %empty

   75 cexprs: COMMA expr cexprs
   76       | %empty

   77 objectdef: LEFT_SQUARE_BRACKET elist RIGHT_SQUARE_BRACKET
   78          | LEFT_SQUARE_BRACKET indexed RIGHT_SQUARE_BRACKET

   79 indexed: indexedelem clindexedelem

   80 clindexedelem: COMMA indexedelem clindexedelem
   81              | %empty

   82 indexedelem: LEFT_CURLY_BRACKET expr COLON functor RIGHT_CURLY_BRACKET

   83 functor: funcdef
   84        | expr

   85 block: LEFT_CURLY_BRACKET RIGHT_CURLY_BRACKET

   86 $@9: %empty

   87 block: LEFT_CURLY_BRACKET $@9 stmt statements RIGHT_CURLY_BRACKET

   88 $@10: %empty

   89 $@11: %empty

   90 $@12: %empty

   91 $@13: %empty

   92 $@14: %empty

   93 funcdef: FUNCTION $@10 LEFT_PARENTHESIS $@11 idlist $@12 RIGHT_PARENTHESIS $@13 funcblockstart block $@14 funcblockend

   94 $@15: %empty

   95 $@16: %empty

   96 $@17: %empty

   97 $@18: %empty

   98 funcdef: FUNCTION ID $@15 LEFT_PARENTHESIS $@16 idlist RIGHT_PARENTHESIS $@17 funcblockstart block $@18 funcblockend

   99 funcblockstart: %empty

  100 funcblockend: %empty

  101 $@19: %empty

  102 idlist: ID $@19 cidlist
  103       | %empty

  104 $@20: %empty

  105 cidlist: COMMA ID $@20 cidlist
  106        | %empty

  107 $@21: %empty

  108 ifprefix: IF LEFT_PARENTHESIS expr $@21 RIGHT_PARENTHESIS

  109 ifstmt: ifprefix stmt
  110       | ifprefix stmt elseprefix stmt

  111 elseprefix: ELSE

  112 whilestmt: whilestart whilecond loopstmt

  113 whilestart: WHILE

  114 $@22: %empty

  115 whilecond: LEFT_PARENTHESIS expr $@22 RIGHT_PARENTHESIS

  116 loopstmt: loopstart stmt loopend

  117 loopstart: %empty

  118 loopend: %empty

  119 $@23: %empty

  120 forprefix: FOR LEFT_PARENTHESIS elist SEMICOLON M expr $@23 SEMICOLON

  121 forstmt: forprefix N elist RIGHT_PARENTHESIS N loopstmt N

  122 N: %empty

  123 $@24: %empty

  124 $@25: %empty

  125 returnstmt: RETURN $@24 expr $@25 SEMICOLON

  126 $@26: %empty

  127 returnstmt: RETURN $@26 SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 108
ELSE (259) 111
WHILE (260) 113
FOR (261) 120
FUNCTION (262) 93 98
RETURN (263) 125 127
BREAK (264) 10
CONTINUE (265) 12
LOCAL (266) 58
TRUE (267) 54
FALSE (268) 55
NIL (269) 56
AND (270) 20
NOT (271) 21
OR (272) 18
ASSIGNMENT (273) 38
PLUS (274) 22
MINUS (275) 23 40
MULT (276) 24
DIV (277) 25
MODULO (278) 26
EQUAL (279) 28
NOT_EQUAL (280) 30
INCREMENT (281) 41 42
DECREMENT (282) 43 44
GREATER (283) 31
LESS (284) 32
GREATER_EQUAL (285) 33
LESS_EQUAL (286) 34
NUMBER (287) 51
REAL_NUMBER (288) 52
ID (289) 57 58 59 61 63 72 98 102 105
STRING (290) 53
LEFT_PARENTHESIS (291) 39 49 65 67 70 72 93 98 108 115 120
RIGHT_PARENTHESIS (292) 39 49 65 67 70 72 93 98 108 115 121
LEFT_SQUARE_BRACKET (293) 62 64 77 78
RIGHT_SQUARE_BRACKET (294) 62 64 77 78
LEFT_CURLY_BRACKET (295) 82 85 87
RIGHT_CURLY_BRACKET (296) 82 85 87
SEMICOLON (297) 4 10 12 15 120 125 127
COMMA (298) 75 80 105
COLON (299) 82
DOUBLE_COLONS (300) 59
DOT (301) 61 63
DOUBLE_DOT (302) 72
ONE_LINE_COMMENT (303)
MULTI_LINE_COMMENT (304)
OTHER (305)
UMINUS (306)
DOTS (307)


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
program (54)
    on left: 1, on right: 0
statements (55)
    on left: 2 3, on right: 1 2 87
stmt (56)
    on left: 4 5 6 7 8 10 12 13 14 15, on right: 2 87 109 110 116
$@1 (57)
    on left: 9, on right: 10
$@2 (58)
    on left: 11, on right: 12
expr (59)
    on left: 16 18 20 21 22 23 24 25 26 28 30 31 32 33 34 35, on right:
    4 18 20 21 22 23 24 25 26 28 30 31 32 33 34 38 39 40 62 64 73 75
    82 84 108 115 120 125
$@3 (60)
    on left: 17, on right: 18
$@4 (61)
    on left: 19, on right: 20
$@5 (62)
    on left: 27, on right: 28
$@6 (63)
    on left: 29, on right: 30
M (64)
    on left: 36, on right: 18 20 120
assignexpr (65)
    on left: 38, on right: 16
$@7 (66)
    on left: 37, on right: 38
term (67)
    on left: 39 40 41 42 43 44 45, on right: 35
primary (68)
    on left: 46 47 48 49 50, on right: 45
const (69)
    on left: 51 52 53 54 55 56, on right: 50
lvalue (70)
    on left: 57 58 59 60, on right: 38 41 42 43 44 46 61 62 66
member (71)
    on left: 61 62 63 64, on right: 60
call (72)
    on left: 65 66 67, on right: 47 63 64 65
callsuffix (73)
    on left: 68 69, on right: 66
normcall (74)
    on left: 70, on right: 68
methodcall (75)
    on left: 72, on right: 69
$@8 (76)
    on left: 71, on right: 72
elist (77)
    on left: 73 74, on right: 65 67 70 72 77 120 121
cexprs (78)
    on left: 75 76, on right: 73 75
objectdef (79)
    on left: 77 78, on right: 48
indexed (80)
    on left: 79, on right: 78
clindexedelem (81)
    on left: 80 81, on right: 79 80
indexedelem (82)
    on left: 82, on right: 79 80
functor (83)
    on left: 83 84, on right: 82
block (84)
    on left: 85 87, on right: 13 93 98
$@9 (85)
    on left: 86, on right: 87
funcdef (86)
    on left: 93 98, on right: 14 49 67 83
$@10 (87)
    on left: 88, on right: 93
$@11 (88)
    on left: 89, on right: 93
$@12 (89)
    on left: 90, on right: 93
$@13 (90)
    on left: 91, on right: 93
$@14 (91)
    on left: 92, on right: 93
$@15 (92)
    on left: 94, on right: 98
$@16 (93)
    on left: 95, on right: 98
$@17 (94)
    on left: 96, on right: 98
$@18 (95)
    on left: 97, on right: 98
funcblockstart (96)
    on left: 99, on right: 93 98
funcblockend (97)
    on left: 100, on right: 93 98
idlist (98)
    on left: 102 103, on right: 93 98
$@19 (99)
    on left: 101, on right: 102
cidlist (100)
    on left: 105 106, on right: 102 105
$@20 (101)
    on left: 104, on right: 105
ifprefix (102)
    on left: 108, on right: 109 110
$@21 (103)
    on left: 107, on right: 108
ifstmt (104)
    on left: 109 110, on right: 5
elseprefix (105)
    on left: 111, on right: 110
whilestmt (106)
    on left: 112, on right: 6
whilestart (107)
    on left: 113, on right: 112
whilecond (108)
    on left: 115, on right: 112
$@22 (109)
    on left: 114, on right: 115
loopstmt (110)
    on left: 116, on right: 112 121
loopstart (111)
    on left: 117, on right: 116
loopend (112)
    on left: 118, on right: 116
forprefix (113)
    on left: 120, on right: 121
$@23 (114)
    on left: 119, on right: 120
forstmt (115)
    on left: 121, on right: 7
N (116)
    on left: 122, on right: 121
returnstmt (117)
    on left: 125 127, on right: 8
$@24 (118)
    on left: 123, on right: 125
$@25 (119)
    on left: 124, on right: 125
$@26 (120)
    on left: 126, on right: 127


State 0

    0 $accept: . program $end

    IF                   shift, and go to state 1
    WHILE                shift, and go to state 2
    FOR                  shift, and go to state 3
    FUNCTION             shift, and go to state 4
    RETURN               shift, and go to state 5
    BREAK                shift, and go to state 6
    CONTINUE             shift, and go to state 7
    LOCAL                shift, and go to state 8
    TRUE                 shift, and go to state 9
    FALSE                shift, and go to state 10
    NIL                  shift, and go to state 11
    NOT                  shift, and go to state 12
    MINUS                shift, and go to state 13
    INCREMENT            shift, and go to state 14
    DECREMENT            shift, and go to state 15
    NUMBER               shift, and go to state 16
    REAL_NUMBER          shift, and go to state 17
    ID                   shift, and go to state 18
    STRING               shift, and go to state 19
    LEFT_PARENTHESIS     shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    LEFT_CURLY_BRACKET   shift, and go to state 22
    SEMICOLON            shift, and go to state 23
    DOUBLE_COLONS        shift, and go to state 24

    $default  reduce using rule 3 (statements)

    program     go to state 25
    statements  go to state 26
    stmt        go to state 27
    expr        go to state 28
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    whilestart  go to state 42
    forprefix   go to state 43
    forstmt     go to state 44
    returnstmt  go to state 45


State 1

  108 ifprefix: IF . LEFT_PARENTHESIS expr $@21 RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 46


State 2

  113 whilestart: WHILE .

    $default  reduce using rule 113 (whilestart)


State 3

  120 forprefix: FOR . LEFT_PARENTHESIS elist SEMICOLON M expr $@23 SEMICOLON

    LEFT_PARENTHESIS  shift, and go to state 47


State 4

   93 funcdef: FUNCTION . $@10 LEFT_PARENTHESIS $@11 idlist $@12 RIGHT_PARENTHESIS $@13 funcblockstart block $@14 funcblockend
   98        | FUNCTION . ID $@15 LEFT_PARENTHESIS $@16 idlist RIGHT_PARENTHESIS $@17 funcblockstart block $@18 funcblockend

    ID  shift, and go to state 48

    $default  reduce using rule 88 ($@10)

    $@10  go to state 49


State 5

  125 returnstmt: RETURN . $@24 expr $@25 SEMICOLON
  127           | RETURN . $@26 SEMICOLON

    SEMICOLON  reduce using rule 126 ($@26)
    $default   reduce using rule 123 ($@24)

    $@24  go to state 50
    $@26  go to state 51


State 6

   10 stmt: BREAK . $@1 SEMICOLON

    $default  reduce using rule 9 ($@1)

    $@1  go to state 52


State 7

   12 stmt: CONTINUE . $@2 SEMICOLON

    $default  reduce using rule 11 ($@2)

    $@2  go to state 53


State 8

   58 lvalue: LOCAL . ID

    ID  shift, and go to state 54


State 9

   54 const: TRUE .

    $default  reduce using rule 54 (const)


State 10

   55 const: FALSE .

    $default  reduce using rule 55 (const)


State 11

   56 const: NIL .

    $default  reduce using rule 56 (const)


State 12

   21 expr: NOT . expr

    LOCAL                shift, and go to state 8
    TRUE                 shift, and go to state 9
    FALSE                shift, and go to state 10
    NIL                  shift, and go to state 11
    NOT                  shift, and go to state 12
    MINUS                shift, and go to state 13
    INCREMENT            shift, and go to state 14
    DECREMENT            shift, and go to state 15
    NUMBER               shift, and go to state 16
    REAL_NUMBER          shift, and go to state 17
    ID                   shift, and go to state 18
    STRING               shift, and go to state 19
    LEFT_PARENTHESIS     shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    DOUBLE_COLONS        shift, and go to state 24

    expr        go to state 55
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 13

   40 term: MINUS . expr

    LOCAL                shift, and go to state 8
    TRUE                 shift, and go to state 9
    FALSE                shift, and go to state 10
    NIL                  shift, and go to state 11
    NOT                  shift, and go to state 12
    MINUS                shift, and go to state 13
    INCREMENT            shift, and go to state 14
    DECREMENT            shift, and go to state 15
    NUMBER               shift, and go to state 16
    REAL_NUMBER          shift, and go to state 17
    ID                   shift, and go to state 18
    STRING               shift, and go to state 19
    LEFT_PARENTHESIS     shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    DOUBLE_COLONS        shift, and go to state 24

    expr        go to state 56
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 14

   41 term: INCREMENT . lvalue

    LOCAL             shift, and go to state 8
    ID                shift, and go to state 18
    LEFT_PARENTHESIS  shift, and go to state 57
    DOUBLE_COLONS     shift, and go to state 24

    lvalue  go to state 58
    member  go to state 34
    call    go to state 59


State 15

   43 term: DECREMENT . lvalue

    LOCAL             shift, and go to state 8
    ID                shift, and go to state 18
    LEFT_PARENTHESIS  shift, and go to state 57
    DOUBLE_COLONS     shift, and go to state 24

    lvalue  go to state 60
    member  go to state 34
    call    go to state 59


State 16

   51 const: NUMBER .

    $default  reduce using rule 51 (const)


State 17

   52 const: REAL_NUMBER .

    $default  reduce using rule 52 (const)


State 18

   57 lvalue: ID .

    $default  reduce using rule 57 (lvalue)


State 19

   53 const: STRING .

    $default  reduce using rule 53 (const)


State 20

   39 term: LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS
   49 primary: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS
   67 call: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    FUNCTION             shift, and go to state 4
    LOCAL                shift, and go to state 8
    TRUE                 shift, and go to state 9
    FALSE                shift, and go to state 10
    NIL                  shift, and go to state 11
    NOT                  shift, and go to state 12
    MINUS                shift, and go to state 13
    INCREMENT            shift, and go to state 14
    DECREMENT            shift, and go to state 15
    NUMBER               shift, and go to state 16
    REAL_NUMBER          shift, and go to state 17
    ID                   shift, and go to state 18
    STRING               shift, and go to state 19
    LEFT_PARENTHESIS     shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    DOUBLE_COLONS        shift, and go to state 24

    expr        go to state 61
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    funcdef     go to state 62


State 21

   77 objectdef: LEFT_SQUARE_BRACKET . elist RIGHT_SQUARE_BRACKET
   78          | LEFT_SQUARE_BRACKET . indexed RIGHT_SQUARE_BRACKET

    LOCAL                shift, and go to state 8
    TRUE                 shift, and go to state 9
    FALSE                shift, and go to state 10
    NIL                  shift, and go to state 11
    NOT                  shift, and go to state 12
    MINUS                shift, and go to state 13
    INCREMENT            shift, and go to state 14
    DECREMENT            shift, and go to state 15
    NUMBER               shift, and go to state 16
    REAL_NUMBER          shift, and go to state 17
    ID                   shift, and go to state 18
    STRING               shift, and go to state 19
    LEFT_PARENTHESIS     shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    LEFT_CURLY_BRACKET   shift, and go to state 63
    DOUBLE_COLONS        shift, and go to state 24

    $default  reduce using rule 74 (elist)

    expr         go to state 64
    assignexpr   go to state 29
    term         go to state 30
    primary      go to state 31
    const        go to state 32
    lvalue       go to state 33
    member       go to state 34
    call         go to state 35
    elist        go to state 65
    objectdef    go to state 36
    indexed      go to state 66
    indexedelem  go to state 67


State 22

   85 block: LEFT_CURLY_BRACKET . RIGHT_CURLY_BRACKET
   87      | LEFT_CURLY_BRACKET . $@9 stmt statements RIGHT_CURLY_BRACKET

    RIGHT_CURLY_BRACKET  shift, and go to state 68

    $default  reduce using rule 86 ($@9)

    $@9  go to state 69


State 23

   15 stmt: SEMICOLON .

    $default  reduce using rule 15 (stmt)


State 24

   59 lvalue: DOUBLE_COLONS . ID

    ID  shift, and go to state 70


State 25

    0 $accept: program . $end

    $end  shift, and go to state 71


State 26

    1 program: statements .

    $default  reduce using rule 1 (program)


State 27

    2 statements: stmt . statements

    IF                   shift, and go to state 1
    WHILE                shift, and go to state 2
    FOR                  shift, and go to state 3
    FUNCTION             shift, and go to state 4
    RETURN               shift, and go to state 5
    BREAK                shift, and go to state 6
    CONTINUE             shift, and go to state 7
    LOCAL                shift, and go to state 8
    TRUE                 shift, and go to state 9
    FALSE                shift, and go to state 10
    NIL                  shift, and go to state 11
    NOT                  shift, and go to state 12
    MINUS                shift, and go to state 13
    INCREMENT            shift, and go to state 14
    DECREMENT            shift, and go to state 15
    NUMBER               shift, and go to state 16
    REAL_NUMBER          shift, and go to state 17
    ID                   shift, and go to state 18
    STRING               shift, and go to state 19
    LEFT_PARENTHESIS     shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    LEFT_CURLY_BRACKET   shift, and go to state 22
    SEMICOLON            shift, and go to state 23
    DOUBLE_COLONS        shift, and go to state 24

    $default  reduce using rule 3 (statements)

    statements  go to state 72
    stmt        go to state 27
    expr        go to state 28
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    whilestart  go to state 42
    forprefix   go to state 43
    forstmt     go to state 44
    returnstmt  go to state 45


State 28

    4 stmt: expr . SEMICOLON
   18 expr: expr . OR $@3 M expr
   20     | expr . AND $@4 M expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MULT expr
   25     | expr . DIV expr
   26     | expr . MODULO expr
   28     | expr . EQUAL $@5 expr
   30     | expr . NOT_EQUAL $@6 expr
   31     | expr . GREATER expr
   32     | expr . LESS expr
   33     | expr . GREATER_EQUAL expr
   34     | expr . LESS_EQUAL expr

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MULT           shift, and go to state 77
    DIV            shift, and go to state 78
    MODULO         shift, and go to state 79
    EQUAL          shift, and go to state 80
    NOT_EQUAL      shift, and go to state 81
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85
    SEMICOLON      shift, and go to state 86


State 29

   16 expr: assignexpr .

    $default  reduce using rule 16 (expr)


State 30

   35 expr: term .

    $default  reduce using rule 35 (expr)


State 31

   45 term: primary .

    $default  reduce using rule 45 (term)


State 32

   50 primary: const .

    $default  reduce using rule 50 (primary)


State 33

   38 assignexpr: lvalue . $@7 ASSIGNMENT expr
   42 term: lvalue . INCREMENT
   44     | lvalue . DECREMENT
   46 primary: lvalue .
   61 member: lvalue . DOT ID
   62       | lvalue . LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET
   66 call: lvalue . callsuffix

    INCREMENT            shift, and go to state 87
    DECREMENT            shift, and go to state 88
    LEFT_PARENTHESIS     shift, and go to state 89
    LEFT_SQUARE_BRACKET  shift, and go to state 90
    DOT                  shift, and go to state 91
    DOUBLE_DOT           shift, and go to state 92

    ASSIGNMENT  reduce using rule 37 ($@7)
    $default    reduce using rule 46 (primary)

    $@7         go to state 93
    callsuffix  go to state 94
    normcall    go to state 95
    methodcall  go to state 96


State 34

   60 lvalue: member .

    $default  reduce using rule 60 (lvalue)


State 35

   47 primary: call .
   63 member: call . DOT ID
   64       | call . LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET
   65 call: call . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS     shift, and go to state 97
    LEFT_SQUARE_BRACKET  shift, and go to state 98
    DOT                  shift, and go to state 99

    $default  reduce using rule 47 (primary)


State 36

   48 primary: objectdef .

    $default  reduce using rule 48 (primary)


State 37

   13 stmt: block .

    $default  reduce using rule 13 (stmt)


State 38

   14 stmt: funcdef .

    $default  reduce using rule 14 (stmt)


State 39

  109 ifstmt: ifprefix . stmt
  110       | ifprefix . stmt elseprefix stmt

    IF                   shift, and go to state 1
    WHILE                shift, and go to state 2
    FOR                  shift, and go to state 3
    FUNCTION             shift, and go to state 4
    RETURN               shift, and go to state 5
    BREAK                shift, and go to state 6
    CONTINUE             shift, and go to state 7
    LOCAL                shift, and go to state 8
    TRUE                 shift, and go to state 9
    FALSE                shift, and go to state 10
    NIL                  shift, and go to state 11
    NOT                  shift, and go to state 12
    MINUS                shift, and go to state 13
    INCREMENT            shift, and go to state 14
    DECREMENT            shift, and go to state 15
    NUMBER               shift, and go to state 16
    REAL_NUMBER          shift, and go to state 17
    ID                   shift, and go to state 18
    STRING               shift, and go to state 19
    LEFT_PARENTHESIS     shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    LEFT_CURLY_BRACKET   shift, and go to state 22
    SEMICOLON            shift, and go to state 23
    DOUBLE_COLONS        shift, and go to state 24

    stmt        go to state 100
    expr        go to state 28
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    whilestart  go to state 42
    forprefix   go to state 43
    forstmt     go to state 44
    returnstmt  go to state 45


State 40

    5 stmt: ifstmt .

    $default  reduce using rule 5 (stmt)


State 41

    6 stmt: whilestmt .

    $default  reduce using rule 6 (stmt)


State 42

  112 whilestmt: whilestart . whilecond loopstmt

    LEFT_PARENTHESIS  shift, and go to state 101

    whilecond  go to state 102


State 43

  121 forstmt: forprefix . N elist RIGHT_PARENTHESIS N loopstmt N

    $default  reduce using rule 122 (N)

    N  go to state 103


State 44

    7 stmt: forstmt .

    $default  reduce using rule 7 (stmt)


State 45

    8 stmt: returnstmt .

    $default  reduce using rule 8 (stmt)


State 46

  108 ifprefix: IF LEFT_PARENTHESIS . expr $@21 RIGHT_PARENTHESIS

    LOCAL                shift, and go to state 8
    TRUE                 shift, and go to state 9
    FALSE                shift, and go to state 10
    NIL                  shift, and go to state 11
    NOT                  shift, and go to state 12
    MINUS                shift, and go to state 13
    INCREMENT            shift, and go to state 14
    DECREMENT            shift, and go to state 15
    NUMBER               shift, and go to state 16
    REAL_NUMBER          shift, and go to state 17
    ID                   shift, and go to state 18
    STRING               shift, and go to state 19
    LEFT_PARENTHESIS     shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    DOUBLE_COLONS        shift, and go to state 24

    expr        go to state 104
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 47

  120 forprefix: FOR LEFT_PARENTHESIS . elist SEMICOLON M expr $@23 SEMICOLON

    LOCAL                shift, and go to state 8
    TRUE                 shift, and go to state 9
    FALSE                shift, and go to state 10
    NIL                  shift, and go to state 11
    NOT                  shift, and go to state 12
    MINUS                shift, and go to state 13
    INCREMENT            shift, and go to state 14
    DECREMENT            shift, and go to state 15
    NUMBER               shift, and go to state 16
    REAL_NUMBER          shift, and go to state 17
    ID                   shift, and go to state 18
    STRING               shift, and go to state 19
    LEFT_PARENTHESIS     shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    DOUBLE_COLONS        shift, and go to state 24

    $default  reduce using rule 74 (elist)

    expr        go to state 64
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 105
    objectdef   go to state 36


State 48

   98 funcdef: FUNCTION ID . $@15 LEFT_PARENTHESIS $@16 idlist RIGHT_PARENTHESIS $@17 funcblockstart block $@18 funcblockend

    $default  reduce using rule 94 ($@15)

    $@15  go to state 106


State 49

   93 funcdef: FUNCTION $@10 . LEFT_PARENTHESIS $@11 idlist $@12 RIGHT_PARENTHESIS $@13 funcblockstart block $@14 funcblockend

    LEFT_PARENTHESIS  shift, and go to state 107


State 50

  125 returnstmt: RETURN $@24 . expr $@25 SEMICOLON

    LOCAL                shift, and go to state 8
    TRUE                 shift, and go to state 9
    FALSE                shift, and go to state 10
    NIL                  shift, and go to state 11
    NOT                  shift, and go to state 12
    MINUS                shift, and go to state 13
    INCREMENT            shift, and go to state 14
    DECREMENT            shift, and go to state 15
    NUMBER               shift, and go to state 16
    REAL_NUMBER          shift, and go to state 17
    ID                   shift, and go to state 18
    STRING               shift, and go to state 19
    LEFT_PARENTHESIS     shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    DOUBLE_COLONS        shift, and go to state 24

    expr        go to state 108
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 51

  127 returnstmt: RETURN $@26 . SEMICOLON

    SEMICOLON  shift, and go to state 109


State 52

   10 stmt: BREAK $@1 . SEMICOLON

    SEMICOLON  shift, and go to state 110


State 53

   12 stmt: CONTINUE $@2 . SEMICOLON

    SEMICOLON  shift, and go to state 111


State 54

   58 lvalue: LOCAL ID .

    $default  reduce using rule 58 (lvalue)


State 55

   18 expr: expr . OR $@3 M expr
   20     | expr . AND $@4 M expr
   21     | NOT expr .
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MULT expr
   25     | expr . DIV expr
   26     | expr . MODULO expr
   28     | expr . EQUAL $@5 expr
   30     | expr . NOT_EQUAL $@6 expr
   31     | expr . GREATER expr
   32     | expr . LESS expr
   33     | expr . GREATER_EQUAL expr
   34     | expr . LESS_EQUAL expr

    $default  reduce using rule 21 (expr)


State 56

   18 expr: expr . OR $@3 M expr
   20     | expr . AND $@4 M expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MULT expr
   25     | expr . DIV expr
   26     | expr . MODULO expr
   28     | expr . EQUAL $@5 expr
   30     | expr . NOT_EQUAL $@6 expr
   31     | expr . GREATER expr
   32     | expr . LESS expr
   33     | expr . GREATER_EQUAL expr
   34     | expr . LESS_EQUAL expr
   40 term: MINUS expr .

    $default  reduce using rule 40 (term)


State 57

   67 call: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    FUNCTION  shift, and go to state 4

    funcdef  go to state 112


State 58

   41 term: INCREMENT lvalue .
   61 member: lvalue . DOT ID
   62       | lvalue . LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET
   66 call: lvalue . callsuffix

    LEFT_PARENTHESIS     shift, and go to state 89
    LEFT_SQUARE_BRACKET  shift, and go to state 90
    DOT                  shift, and go to state 91
    DOUBLE_DOT           shift, and go to state 92

    $default  reduce using rule 41 (term)

    callsuffix  go to state 94
    normcall    go to state 95
    methodcall  go to state 96


State 59

   63 member: call . DOT ID
   64       | call . LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET
   65 call: call . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS     shift, and go to state 97
    LEFT_SQUARE_BRACKET  shift, and go to state 98
    DOT                  shift, and go to state 99


State 60

   43 term: DECREMENT lvalue .
   61 member: lvalue . DOT ID
   62       | lvalue . LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET
   66 call: lvalue . callsuffix

    LEFT_PARENTHESIS     shift, and go to state 89
    LEFT_SQUARE_BRACKET  shift, and go to state 90
    DOT                  shift, and go to state 91
    DOUBLE_DOT           shift, and go to state 92

    $default  reduce using rule 43 (term)

    callsuffix  go to state 94
    normcall    go to state 95
    methodcall  go to state 96


State 61

   18 expr: expr . OR $@3 M expr
   20     | expr . AND $@4 M expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MULT expr
   25     | expr . DIV expr
   26     | expr . MODULO expr
   28     | expr . EQUAL $@5 expr
   30     | expr . NOT_EQUAL $@6 expr
   31     | expr . GREATER expr
   32     | expr . LESS expr
   33     | expr . GREATER_EQUAL expr
   34     | expr . LESS_EQUAL expr
   39 term: LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS

    AND                shift, and go to state 73
    OR                 shift, and go to state 74
    PLUS               shift, and go to state 75
    MINUS              shift, and go to state 76
    MULT               shift, and go to state 77
    DIV                shift, and go to state 78
    MODULO             shift, and go to state 79
    EQUAL              shift, and go to state 80
    NOT_EQUAL          shift, and go to state 81
    GREATER            shift, and go to state 82
    LESS               shift, and go to state 83
    GREATER_EQUAL      shift, and go to state 84
    LESS_EQUAL         shift, and go to state 85
    RIGHT_PARENTHESIS  shift, and go to state 113


State 62

   49 primary: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS
   67 call: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 114


State 63

   82 indexedelem: LEFT_CURLY_BRACKET . expr COLON functor RIGHT_CURLY_BRACKET

    LOCAL                shift, and go to state 8
    TRUE                 shift, and go to state 9
    FALSE                shift, and go to state 10
    NIL                  shift, and go to state 11
    NOT                  shift, and go to state 12
    MINUS                shift, and go to state 13
    INCREMENT            shift, and go to state 14
    DECREMENT            shift, and go to state 15
    NUMBER               shift, and go to state 16
    REAL_NUMBER          shift, and go to state 17
    ID                   shift, and go to state 18
    STRING               shift, and go to state 19
    LEFT_PARENTHESIS     shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    DOUBLE_COLONS        shift, and go to state 24

    expr        go to state 115
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 64

   18 expr: expr . OR $@3 M expr
   20     | expr . AND $@4 M expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MULT expr
   25     | expr . DIV expr
   26     | expr . MODULO expr
   28     | expr . EQUAL $@5 expr
   30     | expr . NOT_EQUAL $@6 expr
   31     | expr . GREATER expr
   32     | expr . LESS expr
   33     | expr . GREATER_EQUAL expr
   34     | expr . LESS_EQUAL expr
   73 elist: expr . cexprs

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MULT           shift, and go to state 77
    DIV            shift, and go to state 78
    MODULO         shift, and go to state 79
    EQUAL          shift, and go to state 80
    NOT_EQUAL      shift, and go to state 81
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85
    COMMA          shift, and go to state 116

    $default  reduce using rule 76 (cexprs)

    cexprs  go to state 117


State 65

   77 objectdef: LEFT_SQUARE_BRACKET elist . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 118


State 66

   78 objectdef: LEFT_SQUARE_BRACKET indexed . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 119


State 67

   79 indexed: indexedelem . clindexedelem

    COMMA  shift, and go to state 120

    $default  reduce using rule 81 (clindexedelem)

    clindexedelem  go to state 121


State 68

   85 block: LEFT_CURLY_BRACKET RIGHT_CURLY_BRACKET .

    $default  reduce using rule 85 (block)


State 69

   87 block: LEFT_CURLY_BRACKET $@9 . stmt statements RIGHT_CURLY_BRACKET

    IF                   shift, and go to state 1
    WHILE                shift, and go to state 2
    FOR                  shift, and go to state 3
    FUNCTION             shift, and go to state 4
    RETURN               shift, and go to state 5
    BREAK                shift, and go to state 6
    CONTINUE             shift, and go to state 7
    LOCAL                shift, and go to state 8
    TRUE                 shift, and go to state 9
    FALSE                shift, and go to state 10
    NIL                  shift, and go to state 11
    NOT                  shift, and go to state 12
    MINUS                shift, and go to state 13
    INCREMENT            shift, and go to state 14
    DECREMENT            shift, and go to state 15
    NUMBER               shift, and go to state 16
    REAL_NUMBER          shift, and go to state 17
    ID                   shift, and go to state 18
    STRING               shift, and go to state 19
    LEFT_PARENTHESIS     shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    LEFT_CURLY_BRACKET   shift, and go to state 22
    SEMICOLON            shift, and go to state 23
    DOUBLE_COLONS        shift, and go to state 24

    stmt        go to state 122
    expr        go to state 28
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    whilestart  go to state 42
    forprefix   go to state 43
    forstmt     go to state 44
    returnstmt  go to state 45


State 70

   59 lvalue: DOUBLE_COLONS ID .

    $default  reduce using rule 59 (lvalue)


State 71

    0 $accept: program $end .

    $default  accept


State 72

    2 statements: stmt statements .

    $default  reduce using rule 2 (statements)


State 73

   20 expr: expr AND . $@4 M expr

    $default  reduce using rule 19 ($@4)

    $@4  go to state 123


State 74

   18 expr: expr OR . $@3 M expr

    $default  reduce using rule 17 ($@3)

    $@3  go to state 124


State 75

   22 expr: expr PLUS . expr

    LOCAL                shift, and go to state 8
    TRUE                 shift, and go to state 9
    FALSE                shift, and go to state 10
    NIL                  shift, and go to state 11
    NOT                  shift, and go to state 12
    MINUS                shift, and go to state 13
    INCREMENT            shift, and go to state 14
    DECREMENT            shift, and go to state 15
    NUMBER               shift, and go to state 16
    REAL_NUMBER          shift, and go to state 17
    ID                   shift, and go to state 18
    STRING               shift, and go to state 19
    LEFT_PARENTHESIS     shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    DOUBLE_COLONS        shift, and go to state 24

    expr        go to state 125
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 76

   23 expr: expr MINUS . expr

    LOCAL                shift, and go to state 8
    TRUE                 shift, and go to state 9
    FALSE                shift, and go to state 10
    NIL                  shift, and go to state 11
    NOT                  shift, and go to state 12
    MINUS                shift, and go to state 13
    INCREMENT            shift, and go to state 14
    DECREMENT            shift, and go to state 15
    NUMBER               shift, and go to state 16
    REAL_NUMBER          shift, and go to state 17
    ID                   shift, and go to state 18
    STRING               shift, and go to state 19
    LEFT_PARENTHESIS     shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    DOUBLE_COLONS        shift, and go to state 24

    expr        go to state 126
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 77

   24 expr: expr MULT . expr

    LOCAL                shift, and go to state 8
    TRUE                 shift, and go to state 9
    FALSE                shift, and go to state 10
    NIL                  shift, and go to state 11
    NOT                  shift, and go to state 12
    MINUS                shift, and go to state 13
    INCREMENT            shift, and go to state 14
    DECREMENT            shift, and go to state 15
    NUMBER               shift, and go to state 16
    REAL_NUMBER          shift, and go to state 17
    ID                   shift, and go to state 18
    STRING               shift, and go to state 19
    LEFT_PARENTHESIS     shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    DOUBLE_COLONS        shift, and go to state 24

    expr        go to state 127
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 78

   25 expr: expr DIV . expr

    LOCAL                shift, and go to state 8
    TRUE                 shift, and go to state 9
    FALSE                shift, and go to state 10
    NIL                  shift, and go to state 11
    NOT                  shift, and go to state 12
    MINUS                shift, and go to state 13
    INCREMENT            shift, and go to state 14
    DECREMENT            shift, and go to state 15
    NUMBER               shift, and go to state 16
    REAL_NUMBER          shift, and go to state 17
    ID                   shift, and go to state 18
    STRING               shift, and go to state 19
    LEFT_PARENTHESIS     shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    DOUBLE_COLONS        shift, and go to state 24

    expr        go to state 128
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 79

   26 expr: expr MODULO . expr

    LOCAL                shift, and go to state 8
    TRUE                 shift, and go to state 9
    FALSE                shift, and go to state 10
    NIL                  shift, and go to state 11
    NOT                  shift, and go to state 12
    MINUS                shift, and go to state 13
    INCREMENT            shift, and go to state 14
    DECREMENT            shift, and go to state 15
    NUMBER               shift, and go to state 16
    REAL_NUMBER          shift, and go to state 17
    ID                   shift, and go to state 18
    STRING               shift, and go to state 19
    LEFT_PARENTHESIS     shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    DOUBLE_COLONS        shift, and go to state 24

    expr        go to state 129
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 80

   28 expr: expr EQUAL . $@5 expr

    $default  reduce using rule 27 ($@5)

    $@5  go to state 130


State 81

   30 expr: expr NOT_EQUAL . $@6 expr

    $default  reduce using rule 29 ($@6)

    $@6  go to state 131


State 82

   31 expr: expr GREATER . expr

    LOCAL                shift, and go to state 8
    TRUE                 shift, and go to state 9
    FALSE                shift, and go to state 10
    NIL                  shift, and go to state 11
    NOT                  shift, and go to state 12
    MINUS                shift, and go to state 13
    INCREMENT            shift, and go to state 14
    DECREMENT            shift, and go to state 15
    NUMBER               shift, and go to state 16
    REAL_NUMBER          shift, and go to state 17
    ID                   shift, and go to state 18
    STRING               shift, and go to state 19
    LEFT_PARENTHESIS     shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    DOUBLE_COLONS        shift, and go to state 24

    expr        go to state 132
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 83

   32 expr: expr LESS . expr

    LOCAL                shift, and go to state 8
    TRUE                 shift, and go to state 9
    FALSE                shift, and go to state 10
    NIL                  shift, and go to state 11
    NOT                  shift, and go to state 12
    MINUS                shift, and go to state 13
    INCREMENT            shift, and go to state 14
    DECREMENT            shift, and go to state 15
    NUMBER               shift, and go to state 16
    REAL_NUMBER          shift, and go to state 17
    ID                   shift, and go to state 18
    STRING               shift, and go to state 19
    LEFT_PARENTHESIS     shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    DOUBLE_COLONS        shift, and go to state 24

    expr        go to state 133
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 84

   33 expr: expr GREATER_EQUAL . expr

    LOCAL                shift, and go to state 8
    TRUE                 shift, and go to state 9
    FALSE                shift, and go to state 10
    NIL                  shift, and go to state 11
    NOT                  shift, and go to state 12
    MINUS                shift, and go to state 13
    INCREMENT            shift, and go to state 14
    DECREMENT            shift, and go to state 15
    NUMBER               shift, and go to state 16
    REAL_NUMBER          shift, and go to state 17
    ID                   shift, and go to state 18
    STRING               shift, and go to state 19
    LEFT_PARENTHESIS     shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    DOUBLE_COLONS        shift, and go to state 24

    expr        go to state 134
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 85

   34 expr: expr LESS_EQUAL . expr

    LOCAL                shift, and go to state 8
    TRUE                 shift, and go to state 9
    FALSE                shift, and go to state 10
    NIL                  shift, and go to state 11
    NOT                  shift, and go to state 12
    MINUS                shift, and go to state 13
    INCREMENT            shift, and go to state 14
    DECREMENT            shift, and go to state 15
    NUMBER               shift, and go to state 16
    REAL_NUMBER          shift, and go to state 17
    ID                   shift, and go to state 18
    STRING               shift, and go to state 19
    LEFT_PARENTHESIS     shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    DOUBLE_COLONS        shift, and go to state 24

    expr        go to state 135
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 86

    4 stmt: expr SEMICOLON .

    $default  reduce using rule 4 (stmt)


State 87

   42 term: lvalue INCREMENT .

    $default  reduce using rule 42 (term)


State 88

   44 term: lvalue DECREMENT .

    $default  reduce using rule 44 (term)


State 89

   70 normcall: LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    LOCAL                shift, and go to state 8
    TRUE                 shift, and go to state 9
    FALSE                shift, and go to state 10
    NIL                  shift, and go to state 11
    NOT                  shift, and go to state 12
    MINUS                shift, and go to state 13
    INCREMENT            shift, and go to state 14
    DECREMENT            shift, and go to state 15
    NUMBER               shift, and go to state 16
    REAL_NUMBER          shift, and go to state 17
    ID                   shift, and go to state 18
    STRING               shift, and go to state 19
    LEFT_PARENTHESIS     shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    DOUBLE_COLONS        shift, and go to state 24

    $default  reduce using rule 74 (elist)

    expr        go to state 64
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 136
    objectdef   go to state 36


State 90

   62 member: lvalue LEFT_SQUARE_BRACKET . expr RIGHT_SQUARE_BRACKET

    LOCAL                shift, and go to state 8
    TRUE                 shift, and go to state 9
    FALSE                shift, and go to state 10
    NIL                  shift, and go to state 11
    NOT                  shift, and go to state 12
    MINUS                shift, and go to state 13
    INCREMENT            shift, and go to state 14
    DECREMENT            shift, and go to state 15
    NUMBER               shift, and go to state 16
    REAL_NUMBER          shift, and go to state 17
    ID                   shift, and go to state 18
    STRING               shift, and go to state 19
    LEFT_PARENTHESIS     shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    DOUBLE_COLONS        shift, and go to state 24

    expr        go to state 137
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 91

   61 member: lvalue DOT . ID

    ID  shift, and go to state 138


State 92

   72 methodcall: DOUBLE_DOT . ID $@8 LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    ID  shift, and go to state 139


State 93

   38 assignexpr: lvalue $@7 . ASSIGNMENT expr

    ASSIGNMENT  shift, and go to state 140


State 94

   66 call: lvalue callsuffix .

    $default  reduce using rule 66 (call)


State 95

   68 callsuffix: normcall .

    $default  reduce using rule 68 (callsuffix)


State 96

   69 callsuffix: methodcall .

    $default  reduce using rule 69 (callsuffix)


State 97

   65 call: call LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    LOCAL                shift, and go to state 8
    TRUE                 shift, and go to state 9
    FALSE                shift, and go to state 10
    NIL                  shift, and go to state 11
    NOT                  shift, and go to state 12
    MINUS                shift, and go to state 13
    INCREMENT            shift, and go to state 14
    DECREMENT            shift, and go to state 15
    NUMBER               shift, and go to state 16
    REAL_NUMBER          shift, and go to state 17
    ID                   shift, and go to state 18
    STRING               shift, and go to state 19
    LEFT_PARENTHESIS     shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    DOUBLE_COLONS        shift, and go to state 24

    $default  reduce using rule 74 (elist)

    expr        go to state 64
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 141
    objectdef   go to state 36


State 98

   64 member: call LEFT_SQUARE_BRACKET . expr RIGHT_SQUARE_BRACKET

    LOCAL                shift, and go to state 8
    TRUE                 shift, and go to state 9
    FALSE                shift, and go to state 10
    NIL                  shift, and go to state 11
    NOT                  shift, and go to state 12
    MINUS                shift, and go to state 13
    INCREMENT            shift, and go to state 14
    DECREMENT            shift, and go to state 15
    NUMBER               shift, and go to state 16
    REAL_NUMBER          shift, and go to state 17
    ID                   shift, and go to state 18
    STRING               shift, and go to state 19
    LEFT_PARENTHESIS     shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    DOUBLE_COLONS        shift, and go to state 24

    expr        go to state 142
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 99

   63 member: call DOT . ID

    ID  shift, and go to state 143


State 100

  109 ifstmt: ifprefix stmt .
  110       | ifprefix stmt . elseprefix stmt

    ELSE  shift, and go to state 144

    ELSE      [reduce using rule 109 (ifstmt)]
    $default  reduce using rule 109 (ifstmt)

    elseprefix  go to state 145


State 101

  115 whilecond: LEFT_PARENTHESIS . expr $@22 RIGHT_PARENTHESIS

    LOCAL                shift, and go to state 8
    TRUE                 shift, and go to state 9
    FALSE                shift, and go to state 10
    NIL                  shift, and go to state 11
    NOT                  shift, and go to state 12
    MINUS                shift, and go to state 13
    INCREMENT            shift, and go to state 14
    DECREMENT            shift, and go to state 15
    NUMBER               shift, and go to state 16
    REAL_NUMBER          shift, and go to state 17
    ID                   shift, and go to state 18
    STRING               shift, and go to state 19
    LEFT_PARENTHESIS     shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    DOUBLE_COLONS        shift, and go to state 24

    expr        go to state 146
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 102

  112 whilestmt: whilestart whilecond . loopstmt

    $default  reduce using rule 117 (loopstart)

    loopstmt   go to state 147
    loopstart  go to state 148


State 103

  121 forstmt: forprefix N . elist RIGHT_PARENTHESIS N loopstmt N

    LOCAL                shift, and go to state 8
    TRUE                 shift, and go to state 9
    FALSE                shift, and go to state 10
    NIL                  shift, and go to state 11
    NOT                  shift, and go to state 12
    MINUS                shift, and go to state 13
    INCREMENT            shift, and go to state 14
    DECREMENT            shift, and go to state 15
    NUMBER               shift, and go to state 16
    REAL_NUMBER          shift, and go to state 17
    ID                   shift, and go to state 18
    STRING               shift, and go to state 19
    LEFT_PARENTHESIS     shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    DOUBLE_COLONS        shift, and go to state 24

    $default  reduce using rule 74 (elist)

    expr        go to state 64
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 149
    objectdef   go to state 36


State 104

   18 expr: expr . OR $@3 M expr
   20     | expr . AND $@4 M expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MULT expr
   25     | expr . DIV expr
   26     | expr . MODULO expr
   28     | expr . EQUAL $@5 expr
   30     | expr . NOT_EQUAL $@6 expr
   31     | expr . GREATER expr
   32     | expr . LESS expr
   33     | expr . GREATER_EQUAL expr
   34     | expr . LESS_EQUAL expr
  108 ifprefix: IF LEFT_PARENTHESIS expr . $@21 RIGHT_PARENTHESIS

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MULT           shift, and go to state 77
    DIV            shift, and go to state 78
    MODULO         shift, and go to state 79
    EQUAL          shift, and go to state 80
    NOT_EQUAL      shift, and go to state 81
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85

    $default  reduce using rule 107 ($@21)

    $@21  go to state 150


State 105

  120 forprefix: FOR LEFT_PARENTHESIS elist . SEMICOLON M expr $@23 SEMICOLON

    SEMICOLON  shift, and go to state 151


State 106

   98 funcdef: FUNCTION ID $@15 . LEFT_PARENTHESIS $@16 idlist RIGHT_PARENTHESIS $@17 funcblockstart block $@18 funcblockend

    LEFT_PARENTHESIS  shift, and go to state 152


State 107

   93 funcdef: FUNCTION $@10 LEFT_PARENTHESIS . $@11 idlist $@12 RIGHT_PARENTHESIS $@13 funcblockstart block $@14 funcblockend

    $default  reduce using rule 89 ($@11)

    $@11  go to state 153


State 108

   18 expr: expr . OR $@3 M expr
   20     | expr . AND $@4 M expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MULT expr
   25     | expr . DIV expr
   26     | expr . MODULO expr
   28     | expr . EQUAL $@5 expr
   30     | expr . NOT_EQUAL $@6 expr
   31     | expr . GREATER expr
   32     | expr . LESS expr
   33     | expr . GREATER_EQUAL expr
   34     | expr . LESS_EQUAL expr
  125 returnstmt: RETURN $@24 expr . $@25 SEMICOLON

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MULT           shift, and go to state 77
    DIV            shift, and go to state 78
    MODULO         shift, and go to state 79
    EQUAL          shift, and go to state 80
    NOT_EQUAL      shift, and go to state 81
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85

    $default  reduce using rule 124 ($@25)

    $@25  go to state 154


State 109

  127 returnstmt: RETURN $@26 SEMICOLON .

    $default  reduce using rule 127 (returnstmt)


State 110

   10 stmt: BREAK $@1 SEMICOLON .

    $default  reduce using rule 10 (stmt)


State 111

   12 stmt: CONTINUE $@2 SEMICOLON .

    $default  reduce using rule 12 (stmt)


State 112

   67 call: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 155


State 113

   39 term: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS .

    $default  reduce using rule 39 (term)


State 114

   49 primary: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS .
   67 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 156

    $default  reduce using rule 49 (primary)


State 115

   18 expr: expr . OR $@3 M expr
   20     | expr . AND $@4 M expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MULT expr
   25     | expr . DIV expr
   26     | expr . MODULO expr
   28     | expr . EQUAL $@5 expr
   30     | expr . NOT_EQUAL $@6 expr
   31     | expr . GREATER expr
   32     | expr . LESS expr
   33     | expr . GREATER_EQUAL expr
   34     | expr . LESS_EQUAL expr
   82 indexedelem: LEFT_CURLY_BRACKET expr . COLON functor RIGHT_CURLY_BRACKET

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MULT           shift, and go to state 77
    DIV            shift, and go to state 78
    MODULO         shift, and go to state 79
    EQUAL          shift, and go to state 80
    NOT_EQUAL      shift, and go to state 81
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85
    COLON          shift, and go to state 157


State 116

   75 cexprs: COMMA . expr cexprs

    LOCAL                shift, and go to state 8
    TRUE                 shift, and go to state 9
    FALSE                shift, and go to state 10
    NIL                  shift, and go to state 11
    NOT                  shift, and go to state 12
    MINUS                shift, and go to state 13
    INCREMENT            shift, and go to state 14
    DECREMENT            shift, and go to state 15
    NUMBER               shift, and go to state 16
    REAL_NUMBER          shift, and go to state 17
    ID                   shift, and go to state 18
    STRING               shift, and go to state 19
    LEFT_PARENTHESIS     shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    DOUBLE_COLONS        shift, and go to state 24

    expr        go to state 158
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 117

   73 elist: expr cexprs .

    $default  reduce using rule 73 (elist)


State 118

   77 objectdef: LEFT_SQUARE_BRACKET elist RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 77 (objectdef)


State 119

   78 objectdef: LEFT_SQUARE_BRACKET indexed RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 78 (objectdef)


State 120

   80 clindexedelem: COMMA . indexedelem clindexedelem

    LEFT_CURLY_BRACKET  shift, and go to state 63

    indexedelem  go to state 159


State 121

   79 indexed: indexedelem clindexedelem .

    $default  reduce using rule 79 (indexed)


State 122

   87 block: LEFT_CURLY_BRACKET $@9 stmt . statements RIGHT_CURLY_BRACKET

    IF                   shift, and go to state 1
    WHILE                shift, and go to state 2
    FOR                  shift, and go to state 3
    FUNCTION             shift, and go to state 4
    RETURN               shift, and go to state 5
    BREAK                shift, and go to state 6
    CONTINUE             shift, and go to state 7
    LOCAL                shift, and go to state 8
    TRUE                 shift, and go to state 9
    FALSE                shift, and go to state 10
    NIL                  shift, and go to state 11
    NOT                  shift, and go to state 12
    MINUS                shift, and go to state 13
    INCREMENT            shift, and go to state 14
    DECREMENT            shift, and go to state 15
    NUMBER               shift, and go to state 16
    REAL_NUMBER          shift, and go to state 17
    ID                   shift, and go to state 18
    STRING               shift, and go to state 19
    LEFT_PARENTHESIS     shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    LEFT_CURLY_BRACKET   shift, and go to state 22
    SEMICOLON            shift, and go to state 23
    DOUBLE_COLONS        shift, and go to state 24

    $default  reduce using rule 3 (statements)

    statements  go to state 160
    stmt        go to state 27
    expr        go to state 28
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    whilestart  go to state 42
    forprefix   go to state 43
    forstmt     go to state 44
    returnstmt  go to state 45


State 123

   20 expr: expr AND $@4 . M expr

    $default  reduce using rule 36 (M)

    M  go to state 161


State 124

   18 expr: expr OR $@3 . M expr

    $default  reduce using rule 36 (M)

    M  go to state 162


State 125

   18 expr: expr . OR $@3 M expr
   20     | expr . AND $@4 M expr
   22     | expr . PLUS expr
   22     | expr PLUS expr .
   23     | expr . MINUS expr
   24     | expr . MULT expr
   25     | expr . DIV expr
   26     | expr . MODULO expr
   28     | expr . EQUAL $@5 expr
   30     | expr . NOT_EQUAL $@6 expr
   31     | expr . GREATER expr
   32     | expr . LESS expr
   33     | expr . GREATER_EQUAL expr
   34     | expr . LESS_EQUAL expr

    MULT    shift, and go to state 77
    DIV     shift, and go to state 78
    MODULO  shift, and go to state 79

    $default  reduce using rule 22 (expr)


State 126

   18 expr: expr . OR $@3 M expr
   20     | expr . AND $@4 M expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   23     | expr MINUS expr .
   24     | expr . MULT expr
   25     | expr . DIV expr
   26     | expr . MODULO expr
   28     | expr . EQUAL $@5 expr
   30     | expr . NOT_EQUAL $@6 expr
   31     | expr . GREATER expr
   32     | expr . LESS expr
   33     | expr . GREATER_EQUAL expr
   34     | expr . LESS_EQUAL expr

    MULT    shift, and go to state 77
    DIV     shift, and go to state 78
    MODULO  shift, and go to state 79

    $default  reduce using rule 23 (expr)


State 127

   18 expr: expr . OR $@3 M expr
   20     | expr . AND $@4 M expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MULT expr
   24     | expr MULT expr .
   25     | expr . DIV expr
   26     | expr . MODULO expr
   28     | expr . EQUAL $@5 expr
   30     | expr . NOT_EQUAL $@6 expr
   31     | expr . GREATER expr
   32     | expr . LESS expr
   33     | expr . GREATER_EQUAL expr
   34     | expr . LESS_EQUAL expr

    $default  reduce using rule 24 (expr)


State 128

   18 expr: expr . OR $@3 M expr
   20     | expr . AND $@4 M expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MULT expr
   25     | expr . DIV expr
   25     | expr DIV expr .
   26     | expr . MODULO expr
   28     | expr . EQUAL $@5 expr
   30     | expr . NOT_EQUAL $@6 expr
   31     | expr . GREATER expr
   32     | expr . LESS expr
   33     | expr . GREATER_EQUAL expr
   34     | expr . LESS_EQUAL expr

    $default  reduce using rule 25 (expr)


State 129

   18 expr: expr . OR $@3 M expr
   20     | expr . AND $@4 M expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MULT expr
   25     | expr . DIV expr
   26     | expr . MODULO expr
   26     | expr MODULO expr .
   28     | expr . EQUAL $@5 expr
   30     | expr . NOT_EQUAL $@6 expr
   31     | expr . GREATER expr
   32     | expr . LESS expr
   33     | expr . GREATER_EQUAL expr
   34     | expr . LESS_EQUAL expr

    $default  reduce using rule 26 (expr)


State 130

   28 expr: expr EQUAL $@5 . expr

    LOCAL                shift, and go to state 8
    TRUE                 shift, and go to state 9
    FALSE                shift, and go to state 10
    NIL                  shift, and go to state 11
    NOT                  shift, and go to state 12
    MINUS                shift, and go to state 13
    INCREMENT            shift, and go to state 14
    DECREMENT            shift, and go to state 15
    NUMBER               shift, and go to state 16
    REAL_NUMBER          shift, and go to state 17
    ID                   shift, and go to state 18
    STRING               shift, and go to state 19
    LEFT_PARENTHESIS     shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    DOUBLE_COLONS        shift, and go to state 24

    expr        go to state 163
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 131

   30 expr: expr NOT_EQUAL $@6 . expr

    LOCAL                shift, and go to state 8
    TRUE                 shift, and go to state 9
    FALSE                shift, and go to state 10
    NIL                  shift, and go to state 11
    NOT                  shift, and go to state 12
    MINUS                shift, and go to state 13
    INCREMENT            shift, and go to state 14
    DECREMENT            shift, and go to state 15
    NUMBER               shift, and go to state 16
    REAL_NUMBER          shift, and go to state 17
    ID                   shift, and go to state 18
    STRING               shift, and go to state 19
    LEFT_PARENTHESIS     shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    DOUBLE_COLONS        shift, and go to state 24

    expr        go to state 164
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 132

   18 expr: expr . OR $@3 M expr
   20     | expr . AND $@4 M expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MULT expr
   25     | expr . DIV expr
   26     | expr . MODULO expr
   28     | expr . EQUAL $@5 expr
   30     | expr . NOT_EQUAL $@6 expr
   31     | expr . GREATER expr
   31     | expr GREATER expr .
   32     | expr . LESS expr
   33     | expr . GREATER_EQUAL expr
   34     | expr . LESS_EQUAL expr

    PLUS    shift, and go to state 75
    MINUS   shift, and go to state 76
    MULT    shift, and go to state 77
    DIV     shift, and go to state 78
    MODULO  shift, and go to state 79

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 31 (expr)


State 133

   18 expr: expr . OR $@3 M expr
   20     | expr . AND $@4 M expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MULT expr
   25     | expr . DIV expr
   26     | expr . MODULO expr
   28     | expr . EQUAL $@5 expr
   30     | expr . NOT_EQUAL $@6 expr
   31     | expr . GREATER expr
   32     | expr . LESS expr
   32     | expr LESS expr .
   33     | expr . GREATER_EQUAL expr
   34     | expr . LESS_EQUAL expr

    PLUS    shift, and go to state 75
    MINUS   shift, and go to state 76
    MULT    shift, and go to state 77
    DIV     shift, and go to state 78
    MODULO  shift, and go to state 79

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 32 (expr)


State 134

   18 expr: expr . OR $@3 M expr
   20     | expr . AND $@4 M expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MULT expr
   25     | expr . DIV expr
   26     | expr . MODULO expr
   28     | expr . EQUAL $@5 expr
   30     | expr . NOT_EQUAL $@6 expr
   31     | expr . GREATER expr
   32     | expr . LESS expr
   33     | expr . GREATER_EQUAL expr
   33     | expr GREATER_EQUAL expr .
   34     | expr . LESS_EQUAL expr

    PLUS    shift, and go to state 75
    MINUS   shift, and go to state 76
    MULT    shift, and go to state 77
    DIV     shift, and go to state 78
    MODULO  shift, and go to state 79

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 33 (expr)


State 135

   18 expr: expr . OR $@3 M expr
   20     | expr . AND $@4 M expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MULT expr
   25     | expr . DIV expr
   26     | expr . MODULO expr
   28     | expr . EQUAL $@5 expr
   30     | expr . NOT_EQUAL $@6 expr
   31     | expr . GREATER expr
   32     | expr . LESS expr
   33     | expr . GREATER_EQUAL expr
   34     | expr . LESS_EQUAL expr
   34     | expr LESS_EQUAL expr .

    PLUS    shift, and go to state 75
    MINUS   shift, and go to state 76
    MULT    shift, and go to state 77
    DIV     shift, and go to state 78
    MODULO  shift, and go to state 79

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 34 (expr)


State 136

   70 normcall: LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 165


State 137

   18 expr: expr . OR $@3 M expr
   20     | expr . AND $@4 M expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MULT expr
   25     | expr . DIV expr
   26     | expr . MODULO expr
   28     | expr . EQUAL $@5 expr
   30     | expr . NOT_EQUAL $@6 expr
   31     | expr . GREATER expr
   32     | expr . LESS expr
   33     | expr . GREATER_EQUAL expr
   34     | expr . LESS_EQUAL expr
   62 member: lvalue LEFT_SQUARE_BRACKET expr . RIGHT_SQUARE_BRACKET

    AND                   shift, and go to state 73
    OR                    shift, and go to state 74
    PLUS                  shift, and go to state 75
    MINUS                 shift, and go to state 76
    MULT                  shift, and go to state 77
    DIV                   shift, and go to state 78
    MODULO                shift, and go to state 79
    EQUAL                 shift, and go to state 80
    NOT_EQUAL             shift, and go to state 81
    GREATER               shift, and go to state 82
    LESS                  shift, and go to state 83
    GREATER_EQUAL         shift, and go to state 84
    LESS_EQUAL            shift, and go to state 85
    RIGHT_SQUARE_BRACKET  shift, and go to state 166


State 138

   61 member: lvalue DOT ID .

    $default  reduce using rule 61 (member)


State 139

   72 methodcall: DOUBLE_DOT ID . $@8 LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    $default  reduce using rule 71 ($@8)

    $@8  go to state 167


State 140

   38 assignexpr: lvalue $@7 ASSIGNMENT . expr

    LOCAL                shift, and go to state 8
    TRUE                 shift, and go to state 9
    FALSE                shift, and go to state 10
    NIL                  shift, and go to state 11
    NOT                  shift, and go to state 12
    MINUS                shift, and go to state 13
    INCREMENT            shift, and go to state 14
    DECREMENT            shift, and go to state 15
    NUMBER               shift, and go to state 16
    REAL_NUMBER          shift, and go to state 17
    ID                   shift, and go to state 18
    STRING               shift, and go to state 19
    LEFT_PARENTHESIS     shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    DOUBLE_COLONS        shift, and go to state 24

    expr        go to state 168
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 141

   65 call: call LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 169


State 142

   18 expr: expr . OR $@3 M expr
   20     | expr . AND $@4 M expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MULT expr
   25     | expr . DIV expr
   26     | expr . MODULO expr
   28     | expr . EQUAL $@5 expr
   30     | expr . NOT_EQUAL $@6 expr
   31     | expr . GREATER expr
   32     | expr . LESS expr
   33     | expr . GREATER_EQUAL expr
   34     | expr . LESS_EQUAL expr
   64 member: call LEFT_SQUARE_BRACKET expr . RIGHT_SQUARE_BRACKET

    AND                   shift, and go to state 73
    OR                    shift, and go to state 74
    PLUS                  shift, and go to state 75
    MINUS                 shift, and go to state 76
    MULT                  shift, and go to state 77
    DIV                   shift, and go to state 78
    MODULO                shift, and go to state 79
    EQUAL                 shift, and go to state 80
    NOT_EQUAL             shift, and go to state 81
    GREATER               shift, and go to state 82
    LESS                  shift, and go to state 83
    GREATER_EQUAL         shift, and go to state 84
    LESS_EQUAL            shift, and go to state 85
    RIGHT_SQUARE_BRACKET  shift, and go to state 170


State 143

   63 member: call DOT ID .

    $default  reduce using rule 63 (member)


State 144

  111 elseprefix: ELSE .

    $default  reduce using rule 111 (elseprefix)


State 145

  110 ifstmt: ifprefix stmt elseprefix . stmt

    IF                   shift, and go to state 1
    WHILE                shift, and go to state 2
    FOR                  shift, and go to state 3
    FUNCTION             shift, and go to state 4
    RETURN               shift, and go to state 5
    BREAK                shift, and go to state 6
    CONTINUE             shift, and go to state 7
    LOCAL                shift, and go to state 8
    TRUE                 shift, and go to state 9
    FALSE                shift, and go to state 10
    NIL                  shift, and go to state 11
    NOT                  shift, and go to state 12
    MINUS                shift, and go to state 13
    INCREMENT            shift, and go to state 14
    DECREMENT            shift, and go to state 15
    NUMBER               shift, and go to state 16
    REAL_NUMBER          shift, and go to state 17
    ID                   shift, and go to state 18
    STRING               shift, and go to state 19
    LEFT_PARENTHESIS     shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    LEFT_CURLY_BRACKET   shift, and go to state 22
    SEMICOLON            shift, and go to state 23
    DOUBLE_COLONS        shift, and go to state 24

    stmt        go to state 171
    expr        go to state 28
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    whilestart  go to state 42
    forprefix   go to state 43
    forstmt     go to state 44
    returnstmt  go to state 45


State 146

   18 expr: expr . OR $@3 M expr
   20     | expr . AND $@4 M expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MULT expr
   25     | expr . DIV expr
   26     | expr . MODULO expr
   28     | expr . EQUAL $@5 expr
   30     | expr . NOT_EQUAL $@6 expr
   31     | expr . GREATER expr
   32     | expr . LESS expr
   33     | expr . GREATER_EQUAL expr
   34     | expr . LESS_EQUAL expr
  115 whilecond: LEFT_PARENTHESIS expr . $@22 RIGHT_PARENTHESIS

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MULT           shift, and go to state 77
    DIV            shift, and go to state 78
    MODULO         shift, and go to state 79
    EQUAL          shift, and go to state 80
    NOT_EQUAL      shift, and go to state 81
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85

    $default  reduce using rule 114 ($@22)

    $@22  go to state 172


State 147

  112 whilestmt: whilestart whilecond loopstmt .

    $default  reduce using rule 112 (whilestmt)


State 148

  116 loopstmt: loopstart . stmt loopend

    IF                   shift, and go to state 1
    WHILE                shift, and go to state 2
    FOR                  shift, and go to state 3
    FUNCTION             shift, and go to state 4
    RETURN               shift, and go to state 5
    BREAK                shift, and go to state 6
    CONTINUE             shift, and go to state 7
    LOCAL                shift, and go to state 8
    TRUE                 shift, and go to state 9
    FALSE                shift, and go to state 10
    NIL                  shift, and go to state 11
    NOT                  shift, and go to state 12
    MINUS                shift, and go to state 13
    INCREMENT            shift, and go to state 14
    DECREMENT            shift, and go to state 15
    NUMBER               shift, and go to state 16
    REAL_NUMBER          shift, and go to state 17
    ID                   shift, and go to state 18
    STRING               shift, and go to state 19
    LEFT_PARENTHESIS     shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    LEFT_CURLY_BRACKET   shift, and go to state 22
    SEMICOLON            shift, and go to state 23
    DOUBLE_COLONS        shift, and go to state 24

    stmt        go to state 173
    expr        go to state 28
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    whilestart  go to state 42
    forprefix   go to state 43
    forstmt     go to state 44
    returnstmt  go to state 45


State 149

  121 forstmt: forprefix N elist . RIGHT_PARENTHESIS N loopstmt N

    RIGHT_PARENTHESIS  shift, and go to state 174


State 150

  108 ifprefix: IF LEFT_PARENTHESIS expr $@21 . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 175


State 151

  120 forprefix: FOR LEFT_PARENTHESIS elist SEMICOLON . M expr $@23 SEMICOLON

    $default  reduce using rule 36 (M)

    M  go to state 176


State 152

   98 funcdef: FUNCTION ID $@15 LEFT_PARENTHESIS . $@16 idlist RIGHT_PARENTHESIS $@17 funcblockstart block $@18 funcblockend

    $default  reduce using rule 95 ($@16)

    $@16  go to state 177


State 153

   93 funcdef: FUNCTION $@10 LEFT_PARENTHESIS $@11 . idlist $@12 RIGHT_PARENTHESIS $@13 funcblockstart block $@14 funcblockend

    ID  shift, and go to state 178

    $default  reduce using rule 103 (idlist)

    idlist  go to state 179


State 154

  125 returnstmt: RETURN $@24 expr $@25 . SEMICOLON

    SEMICOLON  shift, and go to state 180


State 155

   67 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 156


State 156

   67 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    LOCAL                shift, and go to state 8
    TRUE                 shift, and go to state 9
    FALSE                shift, and go to state 10
    NIL                  shift, and go to state 11
    NOT                  shift, and go to state 12
    MINUS                shift, and go to state 13
    INCREMENT            shift, and go to state 14
    DECREMENT            shift, and go to state 15
    NUMBER               shift, and go to state 16
    REAL_NUMBER          shift, and go to state 17
    ID                   shift, and go to state 18
    STRING               shift, and go to state 19
    LEFT_PARENTHESIS     shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    DOUBLE_COLONS        shift, and go to state 24

    $default  reduce using rule 74 (elist)

    expr        go to state 64
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 181
    objectdef   go to state 36


State 157

   82 indexedelem: LEFT_CURLY_BRACKET expr COLON . functor RIGHT_CURLY_BRACKET

    FUNCTION             shift, and go to state 4
    LOCAL                shift, and go to state 8
    TRUE                 shift, and go to state 9
    FALSE                shift, and go to state 10
    NIL                  shift, and go to state 11
    NOT                  shift, and go to state 12
    MINUS                shift, and go to state 13
    INCREMENT            shift, and go to state 14
    DECREMENT            shift, and go to state 15
    NUMBER               shift, and go to state 16
    REAL_NUMBER          shift, and go to state 17
    ID                   shift, and go to state 18
    STRING               shift, and go to state 19
    LEFT_PARENTHESIS     shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    DOUBLE_COLONS        shift, and go to state 24

    expr        go to state 182
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    functor     go to state 183
    funcdef     go to state 184


State 158

   18 expr: expr . OR $@3 M expr
   20     | expr . AND $@4 M expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MULT expr
   25     | expr . DIV expr
   26     | expr . MODULO expr
   28     | expr . EQUAL $@5 expr
   30     | expr . NOT_EQUAL $@6 expr
   31     | expr . GREATER expr
   32     | expr . LESS expr
   33     | expr . GREATER_EQUAL expr
   34     | expr . LESS_EQUAL expr
   75 cexprs: COMMA expr . cexprs

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MULT           shift, and go to state 77
    DIV            shift, and go to state 78
    MODULO         shift, and go to state 79
    EQUAL          shift, and go to state 80
    NOT_EQUAL      shift, and go to state 81
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85
    COMMA          shift, and go to state 116

    $default  reduce using rule 76 (cexprs)

    cexprs  go to state 185


State 159

   80 clindexedelem: COMMA indexedelem . clindexedelem

    COMMA  shift, and go to state 120

    $default  reduce using rule 81 (clindexedelem)

    clindexedelem  go to state 186


State 160

   87 block: LEFT_CURLY_BRACKET $@9 stmt statements . RIGHT_CURLY_BRACKET

    RIGHT_CURLY_BRACKET  shift, and go to state 187


State 161

   20 expr: expr AND $@4 M . expr

    LOCAL                shift, and go to state 8
    TRUE                 shift, and go to state 9
    FALSE                shift, and go to state 10
    NIL                  shift, and go to state 11
    NOT                  shift, and go to state 12
    MINUS                shift, and go to state 13
    INCREMENT            shift, and go to state 14
    DECREMENT            shift, and go to state 15
    NUMBER               shift, and go to state 16
    REAL_NUMBER          shift, and go to state 17
    ID                   shift, and go to state 18
    STRING               shift, and go to state 19
    LEFT_PARENTHESIS     shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    DOUBLE_COLONS        shift, and go to state 24

    expr        go to state 188
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 162

   18 expr: expr OR $@3 M . expr

    LOCAL                shift, and go to state 8
    TRUE                 shift, and go to state 9
    FALSE                shift, and go to state 10
    NIL                  shift, and go to state 11
    NOT                  shift, and go to state 12
    MINUS                shift, and go to state 13
    INCREMENT            shift, and go to state 14
    DECREMENT            shift, and go to state 15
    NUMBER               shift, and go to state 16
    REAL_NUMBER          shift, and go to state 17
    ID                   shift, and go to state 18
    STRING               shift, and go to state 19
    LEFT_PARENTHESIS     shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    DOUBLE_COLONS        shift, and go to state 24

    expr        go to state 189
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 163

   18 expr: expr . OR $@3 M expr
   20     | expr . AND $@4 M expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MULT expr
   25     | expr . DIV expr
   26     | expr . MODULO expr
   28     | expr . EQUAL $@5 expr
   28     | expr EQUAL $@5 expr .
   30     | expr . NOT_EQUAL $@6 expr
   31     | expr . GREATER expr
   32     | expr . LESS expr
   33     | expr . GREATER_EQUAL expr
   34     | expr . LESS_EQUAL expr

    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MULT           shift, and go to state 77
    DIV            shift, and go to state 78
    MODULO         shift, and go to state 79
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85

    EQUAL      error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 28 (expr)


State 164

   18 expr: expr . OR $@3 M expr
   20     | expr . AND $@4 M expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MULT expr
   25     | expr . DIV expr
   26     | expr . MODULO expr
   28     | expr . EQUAL $@5 expr
   30     | expr . NOT_EQUAL $@6 expr
   30     | expr NOT_EQUAL $@6 expr .
   31     | expr . GREATER expr
   32     | expr . LESS expr
   33     | expr . GREATER_EQUAL expr
   34     | expr . LESS_EQUAL expr

    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MULT           shift, and go to state 77
    DIV            shift, and go to state 78
    MODULO         shift, and go to state 79
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85

    EQUAL      error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 30 (expr)


State 165

   70 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 70 (normcall)


State 166

   62 member: lvalue LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 62 (member)


State 167

   72 methodcall: DOUBLE_DOT ID $@8 . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 190


State 168

   18 expr: expr . OR $@3 M expr
   20     | expr . AND $@4 M expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MULT expr
   25     | expr . DIV expr
   26     | expr . MODULO expr
   28     | expr . EQUAL $@5 expr
   30     | expr . NOT_EQUAL $@6 expr
   31     | expr . GREATER expr
   32     | expr . LESS expr
   33     | expr . GREATER_EQUAL expr
   34     | expr . LESS_EQUAL expr
   38 assignexpr: lvalue $@7 ASSIGNMENT expr .

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MULT           shift, and go to state 77
    DIV            shift, and go to state 78
    MODULO         shift, and go to state 79
    EQUAL          shift, and go to state 80
    NOT_EQUAL      shift, and go to state 81
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85

    $default  reduce using rule 38 (assignexpr)


State 169

   65 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 65 (call)


State 170

   64 member: call LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 64 (member)


State 171

  110 ifstmt: ifprefix stmt elseprefix stmt .

    $default  reduce using rule 110 (ifstmt)


State 172

  115 whilecond: LEFT_PARENTHESIS expr $@22 . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 191


State 173

  116 loopstmt: loopstart stmt . loopend

    $default  reduce using rule 118 (loopend)

    loopend  go to state 192


State 174

  121 forstmt: forprefix N elist RIGHT_PARENTHESIS . N loopstmt N

    $default  reduce using rule 122 (N)

    N  go to state 193


State 175

  108 ifprefix: IF LEFT_PARENTHESIS expr $@21 RIGHT_PARENTHESIS .

    $default  reduce using rule 108 (ifprefix)


State 176

  120 forprefix: FOR LEFT_PARENTHESIS elist SEMICOLON M . expr $@23 SEMICOLON

    LOCAL                shift, and go to state 8
    TRUE                 shift, and go to state 9
    FALSE                shift, and go to state 10
    NIL                  shift, and go to state 11
    NOT                  shift, and go to state 12
    MINUS                shift, and go to state 13
    INCREMENT            shift, and go to state 14
    DECREMENT            shift, and go to state 15
    NUMBER               shift, and go to state 16
    REAL_NUMBER          shift, and go to state 17
    ID                   shift, and go to state 18
    STRING               shift, and go to state 19
    LEFT_PARENTHESIS     shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    DOUBLE_COLONS        shift, and go to state 24

    expr        go to state 194
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36


State 177

   98 funcdef: FUNCTION ID $@15 LEFT_PARENTHESIS $@16 . idlist RIGHT_PARENTHESIS $@17 funcblockstart block $@18 funcblockend

    ID  shift, and go to state 178

    $default  reduce using rule 103 (idlist)

    idlist  go to state 195


State 178

  102 idlist: ID . $@19 cidlist

    $default  reduce using rule 101 ($@19)

    $@19  go to state 196


State 179

   93 funcdef: FUNCTION $@10 LEFT_PARENTHESIS $@11 idlist . $@12 RIGHT_PARENTHESIS $@13 funcblockstart block $@14 funcblockend

    $default  reduce using rule 90 ($@12)

    $@12  go to state 197


State 180

  125 returnstmt: RETURN $@24 expr $@25 SEMICOLON .

    $default  reduce using rule 125 (returnstmt)


State 181

   67 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 198


State 182

   18 expr: expr . OR $@3 M expr
   20     | expr . AND $@4 M expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MULT expr
   25     | expr . DIV expr
   26     | expr . MODULO expr
   28     | expr . EQUAL $@5 expr
   30     | expr . NOT_EQUAL $@6 expr
   31     | expr . GREATER expr
   32     | expr . LESS expr
   33     | expr . GREATER_EQUAL expr
   34     | expr . LESS_EQUAL expr
   84 functor: expr .

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MULT           shift, and go to state 77
    DIV            shift, and go to state 78
    MODULO         shift, and go to state 79
    EQUAL          shift, and go to state 80
    NOT_EQUAL      shift, and go to state 81
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85

    $default  reduce using rule 84 (functor)


State 183

   82 indexedelem: LEFT_CURLY_BRACKET expr COLON functor . RIGHT_CURLY_BRACKET

    RIGHT_CURLY_BRACKET  shift, and go to state 199


State 184

   83 functor: funcdef .

    $default  reduce using rule 83 (functor)


State 185

   75 cexprs: COMMA expr cexprs .

    $default  reduce using rule 75 (cexprs)


State 186

   80 clindexedelem: COMMA indexedelem clindexedelem .

    $default  reduce using rule 80 (clindexedelem)


State 187

   87 block: LEFT_CURLY_BRACKET $@9 stmt statements RIGHT_CURLY_BRACKET .

    $default  reduce using rule 87 (block)


State 188

   18 expr: expr . OR $@3 M expr
   20     | expr . AND $@4 M expr
   20     | expr AND $@4 M expr .
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MULT expr
   25     | expr . DIV expr
   26     | expr . MODULO expr
   28     | expr . EQUAL $@5 expr
   30     | expr . NOT_EQUAL $@6 expr
   31     | expr . GREATER expr
   32     | expr . LESS expr
   33     | expr . GREATER_EQUAL expr
   34     | expr . LESS_EQUAL expr

    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MULT           shift, and go to state 77
    DIV            shift, and go to state 78
    MODULO         shift, and go to state 79
    EQUAL          shift, and go to state 80
    NOT_EQUAL      shift, and go to state 81
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85

    $default  reduce using rule 20 (expr)


State 189

   18 expr: expr . OR $@3 M expr
   18     | expr OR $@3 M expr .
   20     | expr . AND $@4 M expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MULT expr
   25     | expr . DIV expr
   26     | expr . MODULO expr
   28     | expr . EQUAL $@5 expr
   30     | expr . NOT_EQUAL $@6 expr
   31     | expr . GREATER expr
   32     | expr . LESS expr
   33     | expr . GREATER_EQUAL expr
   34     | expr . LESS_EQUAL expr

    AND            shift, and go to state 73
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MULT           shift, and go to state 77
    DIV            shift, and go to state 78
    MODULO         shift, and go to state 79
    EQUAL          shift, and go to state 80
    NOT_EQUAL      shift, and go to state 81
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85

    $default  reduce using rule 18 (expr)


State 190

   72 methodcall: DOUBLE_DOT ID $@8 LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    LOCAL                shift, and go to state 8
    TRUE                 shift, and go to state 9
    FALSE                shift, and go to state 10
    NIL                  shift, and go to state 11
    NOT                  shift, and go to state 12
    MINUS                shift, and go to state 13
    INCREMENT            shift, and go to state 14
    DECREMENT            shift, and go to state 15
    NUMBER               shift, and go to state 16
    REAL_NUMBER          shift, and go to state 17
    ID                   shift, and go to state 18
    STRING               shift, and go to state 19
    LEFT_PARENTHESIS     shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    DOUBLE_COLONS        shift, and go to state 24

    $default  reduce using rule 74 (elist)

    expr        go to state 64
    assignexpr  go to state 29
    term        go to state 30
    primary     go to state 31
    const       go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 200
    objectdef   go to state 36


State 191

  115 whilecond: LEFT_PARENTHESIS expr $@22 RIGHT_PARENTHESIS .

    $default  reduce using rule 115 (whilecond)


State 192

  116 loopstmt: loopstart stmt loopend .

    $default  reduce using rule 116 (loopstmt)


State 193

  121 forstmt: forprefix N elist RIGHT_PARENTHESIS N . loopstmt N

    $default  reduce using rule 117 (loopstart)

    loopstmt   go to state 201
    loopstart  go to state 148


State 194

   18 expr: expr . OR $@3 M expr
   20     | expr . AND $@4 M expr
   22     | expr . PLUS expr
   23     | expr . MINUS expr
   24     | expr . MULT expr
   25     | expr . DIV expr
   26     | expr . MODULO expr
   28     | expr . EQUAL $@5 expr
   30     | expr . NOT_EQUAL $@6 expr
   31     | expr . GREATER expr
   32     | expr . LESS expr
   33     | expr . GREATER_EQUAL expr
   34     | expr . LESS_EQUAL expr
  120 forprefix: FOR LEFT_PARENTHESIS elist SEMICOLON M expr . $@23 SEMICOLON

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MULT           shift, and go to state 77
    DIV            shift, and go to state 78
    MODULO         shift, and go to state 79
    EQUAL          shift, and go to state 80
    NOT_EQUAL      shift, and go to state 81
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85

    $default  reduce using rule 119 ($@23)

    $@23  go to state 202


State 195

   98 funcdef: FUNCTION ID $@15 LEFT_PARENTHESIS $@16 idlist . RIGHT_PARENTHESIS $@17 funcblockstart block $@18 funcblockend

    RIGHT_PARENTHESIS  shift, and go to state 203


State 196

  102 idlist: ID $@19 . cidlist

    COMMA  shift, and go to state 204

    $default  reduce using rule 106 (cidlist)

    cidlist  go to state 205


State 197

   93 funcdef: FUNCTION $@10 LEFT_PARENTHESIS $@11 idlist $@12 . RIGHT_PARENTHESIS $@13 funcblockstart block $@14 funcblockend

    RIGHT_PARENTHESIS  shift, and go to state 206


State 198

   67 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 67 (call)


State 199

   82 indexedelem: LEFT_CURLY_BRACKET expr COLON functor RIGHT_CURLY_BRACKET .

    $default  reduce using rule 82 (indexedelem)


State 200

   72 methodcall: DOUBLE_DOT ID $@8 LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 207


State 201

  121 forstmt: forprefix N elist RIGHT_PARENTHESIS N loopstmt . N

    $default  reduce using rule 122 (N)

    N  go to state 208


State 202

  120 forprefix: FOR LEFT_PARENTHESIS elist SEMICOLON M expr $@23 . SEMICOLON

    SEMICOLON  shift, and go to state 209


State 203

   98 funcdef: FUNCTION ID $@15 LEFT_PARENTHESIS $@16 idlist RIGHT_PARENTHESIS . $@17 funcblockstart block $@18 funcblockend

    $default  reduce using rule 96 ($@17)

    $@17  go to state 210


State 204

  105 cidlist: COMMA . ID $@20 cidlist

    ID  shift, and go to state 211


State 205

  102 idlist: ID $@19 cidlist .

    $default  reduce using rule 102 (idlist)


State 206

   93 funcdef: FUNCTION $@10 LEFT_PARENTHESIS $@11 idlist $@12 RIGHT_PARENTHESIS . $@13 funcblockstart block $@14 funcblockend

    $default  reduce using rule 91 ($@13)

    $@13  go to state 212


State 207

   72 methodcall: DOUBLE_DOT ID $@8 LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 72 (methodcall)


State 208

  121 forstmt: forprefix N elist RIGHT_PARENTHESIS N loopstmt N .

    $default  reduce using rule 121 (forstmt)


State 209

  120 forprefix: FOR LEFT_PARENTHESIS elist SEMICOLON M expr $@23 SEMICOLON .

    $default  reduce using rule 120 (forprefix)


State 210

   98 funcdef: FUNCTION ID $@15 LEFT_PARENTHESIS $@16 idlist RIGHT_PARENTHESIS $@17 . funcblockstart block $@18 funcblockend

    $default  reduce using rule 99 (funcblockstart)

    funcblockstart  go to state 213


State 211

  105 cidlist: COMMA ID . $@20 cidlist

    $default  reduce using rule 104 ($@20)

    $@20  go to state 214


State 212

   93 funcdef: FUNCTION $@10 LEFT_PARENTHESIS $@11 idlist $@12 RIGHT_PARENTHESIS $@13 . funcblockstart block $@14 funcblockend

    $default  reduce using rule 99 (funcblockstart)

    funcblockstart  go to state 215


State 213

   98 funcdef: FUNCTION ID $@15 LEFT_PARENTHESIS $@16 idlist RIGHT_PARENTHESIS $@17 funcblockstart . block $@18 funcblockend

    LEFT_CURLY_BRACKET  shift, and go to state 22

    block  go to state 216


State 214

  105 cidlist: COMMA ID $@20 . cidlist

    COMMA  shift, and go to state 204

    $default  reduce using rule 106 (cidlist)

    cidlist  go to state 217


State 215

   93 funcdef: FUNCTION $@10 LEFT_PARENTHESIS $@11 idlist $@12 RIGHT_PARENTHESIS $@13 funcblockstart . block $@14 funcblockend

    LEFT_CURLY_BRACKET  shift, and go to state 22

    block  go to state 218


State 216

   98 funcdef: FUNCTION ID $@15 LEFT_PARENTHESIS $@16 idlist RIGHT_PARENTHESIS $@17 funcblockstart block . $@18 funcblockend

    $default  reduce using rule 97 ($@18)

    $@18  go to state 219


State 217

  105 cidlist: COMMA ID $@20 cidlist .

    $default  reduce using rule 105 (cidlist)


State 218

   93 funcdef: FUNCTION $@10 LEFT_PARENTHESIS $@11 idlist $@12 RIGHT_PARENTHESIS $@13 funcblockstart block . $@14 funcblockend

    $default  reduce using rule 92 ($@14)

    $@14  go to state 220


State 219

   98 funcdef: FUNCTION ID $@15 LEFT_PARENTHESIS $@16 idlist RIGHT_PARENTHESIS $@17 funcblockstart block $@18 . funcblockend

    $default  reduce using rule 100 (funcblockend)

    funcblockend  go to state 221


State 220

   93 funcdef: FUNCTION $@10 LEFT_PARENTHESIS $@11 idlist $@12 RIGHT_PARENTHESIS $@13 funcblockstart block $@14 . funcblockend

    $default  reduce using rule 100 (funcblockend)

    funcblockend  go to state 222


State 221

   98 funcdef: FUNCTION ID $@15 LEFT_PARENTHESIS $@16 idlist RIGHT_PARENTHESIS $@17 funcblockstart block $@18 funcblockend .

    $default  reduce using rule 98 (funcdef)


State 222

   93 funcdef: FUNCTION $@10 LEFT_PARENTHESIS $@11 idlist $@12 RIGHT_PARENTHESIS $@13 funcblockstart block $@14 funcblockend .

    $default  reduce using rule 93 (funcdef)
